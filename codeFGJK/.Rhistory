JJJ = Jest(X,r=rFGJ)
KKK = Kest(X,r=rK)
x11()
par(mfrow=c(2,2))
plot(rFGJ,FFF$rs,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
lines(rFGJ, f, lty=2, col=2)
legend(0, 0.98*f[length(f)], legend=c("F spatstat","F calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,GGG$rs,main="G",type="l",col="blue",xlab="r", ylab="G(r)")
lines(rFGJ, g, lty=2, col=2)
legend(0, 0.98*g[length(g)], legend=c("G spatstat","G calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,JJJ$rs,main="J",type="l",col="blue",xlab="r", ylab="J(r)")
lines(rFGJ, j, lty=2, col=2)
legend(0, 0.98*JJJ$rs[length(j)], legend=c("J spatstat","J calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rK,KKK$border,main="K",type="l",col="blue",xlab="r", ylab="K(r)")
lines(rK, k, lty=2, col=2)
legend(0, 0.98*k[length(k)], legend=c("K spatstat","K calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
title(main="Spatstat",outer=TRUE,line=-1.5)
#
# Clean memory
#
#rm(list=ls())
#setwd("/home/clement/Documents/Stage2A/codeComplet/R")
## myScript.R
args = commandArgs(TRUE)
params0 = args[1]
# on lit les paramètres
#params0="../PARAMS/p_str_cftp_C.txt"
params=read.table(params0,header=F)
n=dim(params)[1]
dossier=as.character(params[n,1])
# on se place dans le bon dossier
setwd(dossier)
rFGJ0=read.table("./rayonsFGJ.txt",header=F)
rFGJ=rFGJ0[,1]
rK0=read.table("./rayonsK.txt",header=F)
rK=rK0[,1]
f = read.table("./F.txt",header=F)
minF = apply(f,2,min)
maxF = apply(f,2,max)
f_test=f[1,]
g = read.table("./G.txt",header=F)
minG = apply(g,2,min)
maxG = apply(g,2,max)
g_test=g[1,]
j = read.table("./J.txt",header=F)
minJ = apply(j,2,min)
maxJ = apply(j,2,max)
j_test=j[1,]
k = read.table("./K.txt",header=F)
minK = apply(k,2,min)
maxK = apply(k,2,max)
k_test=k[1,]
### figure
x11()
par(mfrow=c(2,2))
# F
yMin = min(minF)
yMax = max(maxF)
plot(rFGJ, minF, type="l", col="black", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minF,rev(maxF)),col="blue")
lines(rFGJ, maxF, type="l", col="black")
lines(rFGJ, f_test, type="l", col="red")
title(main="enveloppe de F")
# G
yMin = min(minG)
yMax = max(maxG)
plot(rFGJ, minG, type="l", col="black", xlab="r", ylab="G(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minG,rev(maxG)),col="blue")
lines(rFGJ, maxG, type="l", col="black")
lines(rFGJ, g_test, type="l", col="red")
title(main="enveloppe de G")
# J
yMin = min(minJ)
yMax = max(maxJ)
plot(rFGJ, minJ, type="l", col="black", xlab="r", ylab="J(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minJ,rev(maxJ)),col="blue")
lines(rFGJ, maxJ, type="l", col="black")
lines(rFGJ, j_test, type="l", col="red")
title(main="enveloppe de J")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test, type="l", col="red")
title(main="enveloppe de K")
rm(list=ls())
setwd("/home/clement/Documents/Stage2A/codeComplet/R")
args = commandArgs(TRUE)
params0 = args[1]
# on lit les paramètres
#params0="../PARAMS/p_str_cftp_C.txt"
params=read.table(params0,header=F)
n=dim(params)[1]
dossier=as.character(params[n,1])
# on se place dans le bon dossier
setwd(dossier)
rFGJ0=read.table("./rayonsFGJ.txt",header=F)
rFGJ=rFGJ0[,1]
rK0=read.table("./rayonsK.txt",header=F)
rK=rK0[,1]
f = read.table("./F.txt",header=F)
minF = apply(f,2,min)
maxF = apply(f,2,max)
f_test=f[1,]
g = read.table("./G.txt",header=F)
minG = apply(g,2,min)
maxG = apply(g,2,max)
g_test=g[1,]
j = read.table("./J.txt",header=F)
minJ = apply(j,2,min)
maxJ = apply(j,2,max)
j_test=j[1,]
k = read.table("./K.txt",header=F)
minK = apply(k,2,min)
maxK = apply(k,2,max)
k_test=k[1,]
### figure
x11()
par(mfrow=c(2,2))
# F
yMin = min(minF)
yMax = max(maxF)
plot(rFGJ, minF, type="l", col="black", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minF,rev(maxF)),col="blue")
lines(rFGJ, maxF, type="l", col="black")
lines(rFGJ, f_test, type="l", col="red")
title(main="enveloppe de F")
# G
yMin = min(minG)
yMax = max(maxG)
plot(rFGJ, minG, type="l", col="black", xlab="r", ylab="G(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minG,rev(maxG)),col="blue")
lines(rFGJ, maxG, type="l", col="black")
lines(rFGJ, g_test, type="l", col="red")
title(main="enveloppe de G")
# J
yMin = min(minJ)
yMax = max(maxJ)
plot(rFGJ, minJ, type="l", col="black", xlab="r", ylab="J(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minJ,rev(maxJ)),col="blue")
lines(rFGJ, maxJ, type="l", col="black")
lines(rFGJ, j_test, type="l", col="red")
title(main="enveloppe de J")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test, type="l", col="red")
title(main="enveloppe de K")
rm(list=ls())
params0="../PARAMS/p_str_cftp_A.txt"
params=read.table(params0,header=F)
n=dim(params)[1]
dossier=as.character(params[n,1])
# on se place dans le bon dossier
setwd(dossier)
rFGJ0=read.table("./rayonsFGJ.txt",header=F)
rFGJ=rFGJ0[,1]
rK0=read.table("./rayonsK.txt",header=F)
rK=rK0[,1]
f = read.table("./F.txt",header=F)
minF = apply(f,2,min)
maxF = apply(f,2,max)
f_test=f[1,]
g = read.table("./G.txt",header=F)
minG = apply(g,2,min)
maxG = apply(g,2,max)
g_test=g[1,]
j = read.table("./J.txt",header=F)
minJ = apply(j,2,min)
maxJ = apply(j,2,max)
j_test=j[1,]
k = read.table("./K.txt",header=F)
minK = apply(k,2,min)
maxK = apply(k,2,max)
k_test=k[1,]
### figure
x11()
par(mfrow=c(2,2))
# F
yMin = min(minF)
yMax = max(maxF)
plot(rFGJ, minF, type="l", col="black", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minF,rev(maxF)),col="blue")
lines(rFGJ, maxF, type="l", col="black")
lines(rFGJ, f_test, type="l", col="red")
title(main="enveloppe de F")
# G
yMin = min(minG)
yMax = max(maxG)
plot(rFGJ, minG, type="l", col="black", xlab="r", ylab="G(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minG,rev(maxG)),col="blue")
lines(rFGJ, maxG, type="l", col="black")
lines(rFGJ, g_test, type="l", col="red")
title(main="enveloppe de G")
# J
yMin = min(minJ)
yMax = max(maxJ)
plot(rFGJ, minJ, type="l", col="black", xlab="r", ylab="J(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minJ,rev(maxJ)),col="blue")
lines(rFGJ, maxJ, type="l", col="black")
lines(rFGJ, j_test, type="l", col="red")
title(main="enveloppe de J")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test, type="l", col="red")
title(main="enveloppe de K")
x11()
par(mfrow=c(2,2))
# F
yMin = min(minF)
yMax = max(maxF)
plot(rFGJ, minF, type="l", col="black", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minF,rev(maxF)),col="blue")
lines(rFGJ, maxF, type="l", col="black")
x11()
par(mfrow=c(2,2))
# F
yMin = min(minF)
yMax = max(maxF)
plot(rFGJ, minF, type="l", col="black", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
polygon(c(rFGJ,rev(rFGJ)),c(minF,rev(maxF)),col="blue")
lines(rFGJ, maxF, type="l", col="black")
lines(rFGJ, f_test, type="l", col="red")
title(main="enveloppe de F")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test, type="l", col="red")
title(main="enveloppe de K")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test/2, type="l", col="red")
title(main="enveloppe de K")
# K
yMin = min(minK)
yMax = max(maxK)
plot(rK, minK, type="l", col="black", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
polygon(c(rK,rev(rK)),c(minK,rev(maxK)),col="blue")
lines(rK, maxK, type="l", col="black")
lines(rK, k_test*2, type="l", col="red")
title(main="enveloppe de K")
x11()
yMin = min(k[1],Kpois[1])
yMax = max(k[length(k)],Kpois[length(k)])
plot(rK, k, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
lines(rK,Kpois,lty=2,col=2)
title(main="Fonction K")
legend(0, 0.98*yMax, legend=c("K calcul", "K poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
rm(list=ls())
#
# Load necessary libraries
#
library(spatstat)
#
# Set working directory
#
setwd("/home/clement/Documents/Stage2A/codeFGJK")
#
# Source program functions
#
source("./R/pointPatternAnalysisTools.R")
#
# Récupération des valeurs des fonctions
#
sufficient.stat=read.table("./RESULTS/F.txt",header=F)
f=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/G.txt",header=F)
g=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/J.txt",header=F)
j=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/K.txt",header=F)
k=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/rayonsK.txt",header=F)
rK=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/rayonsFGJ.txt",header=F)
rFGJ=sufficient.stat[,1]
#sr=sufficient.stat[,2]
#
# Estimation de l'intensité
#
sufficient.stat=read.table("./RESULTS/autre.txt",header=F)
n=as.numeric(as.character(sufficient.stat[1,1]))
W=as.numeric(as.character(sufficient.stat[2,1]))
lambda = n/W
Fpois = 1-exp(-lambda*pi*rFGJ*rFGJ)
Jpois = rep(1,length(rFGJ))
Kpois = pi*rK*rK
#
# Affichage des fonctions
#
x11()
par(mfrow=c(2,2))
# F
yMin = min(f[1],Fpois[1])
yMax = max(f[length(f)],Fpois[length(f)])
plot(rFGJ, f, type="l", col="blue", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
lines(rFGJ, Fpois, lty=2, col=2)
title(main="Fonction F")
legend(0, 0.98*yMax, legend=c("F calcul", "F poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# G
yMin = min(g[1],Fpois[1])
yMax = max(g[length(g)],Fpois[length(g)])
plot(rFGJ, g, type="l", col="blue", xlab="r", ylab="G(r)", ylim=c(yMin,yMax))
lines(rFGJ, Fpois, lty=2, col=2)
title(main="Fonction G")
legend(0, 0.98*yMax, legend=c("G calcul", "G poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# J
yMin = min(j,Jpois)
yMax = max(j,Jpois)
plot(rFGJ, j, type="l", col="blue", xlab="r", ylab="J(r)", ylim=c(yMin,yMax))
lines(rFGJ,Jpois,lty=2,col=2)
title(main="Fonction J")
legend(0, 0.98*yMax, legend=c("J calcul", "J poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# K
yMin = min(k[1],Kpois[1])
yMax = max(k[length(k)],Kpois[length(k)])
plot(rK, k, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
lines(rK,Kpois,lty=2,col=2)
title(main="Fonction K")
legend(0, 0.98*yMax, legend=c("K calcul", "K poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
#
# Read the pattern : Strauss simulation
#
#name.file="./POINTS/Y_strauss_cftp_B.txt"
name.file = as.character(sufficient.stat[3,1])
X=read.point.pattern(name.file)
#
# Analyse exploratoire de X avec spatstat
#
FFF = Fest(X,r=rFGJ)
GGG = Gest(X,r=rFGJ)
JJJ = Jest(X,r=rFGJ)
KKK = Kest(X,r=rK)
x11()
par(mfrow=c(2,2))
plot(rFGJ,FFF$rs,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
lines(rFGJ, f, lty=2, col=2)
legend(0, 0.98*f[length(f)], legend=c("F spatstat","F calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,GGG$rs,main="G",type="l",col="blue",xlab="r", ylab="G(r)")
lines(rFGJ, g, lty=2, col=2)
legend(0, 0.98*g[length(g)], legend=c("G spatstat","G calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,JJJ$rs,main="J",type="l",col="blue",xlab="r", ylab="J(r)")
lines(rFGJ, j, lty=2, col=2)
legend(0, 0.98*JJJ$rs[length(j)], legend=c("J spatstat","J calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rK,KKK$border,main="K",type="l",col="blue",xlab="r", ylab="K(r)")
lines(rK, k, lty=2, col=2)
legend(0, 0.98*k[length(k)], legend=c("K spatstat","K calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
title(main="Spatstat",outer=TRUE,line=-1.5)
yMin = min(k[1],Kpois[1])
yMax = max(k[length(k)],Kpois[length(k)])
plot(rK, k, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
lines(rK,Kpois,lty=2,col=2)
title(main="Fonction K")
legend(0, 0.98*yMax, legend=c("K calcul", "K poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rK, k, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
plot(rK, kpois, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
plot(rK, Kpois, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
plot(rK, Kpois, type=2, col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
plot(rK, Kpois, lty=2, col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
plot(rK, Kpois, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
x11()
plot(rK, Kpois, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
x11()
par(mfrow=c(2,2))
plot(rK, Kpois, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
par(mfrow=c(2,2))
plot(rFGJ, Fpois, type="l", col="blue", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
yMin = min(f[1],Fpois[1])
yMax = max(f[length(f)],Fpois[length(f)])
plot(rFGJ, Fpois, type="l", col="blue", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
FFF
FFF2 = Fest(X)
x11()
par(mfrow=c(2,2))
plot(FFF$rs,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
FFF2 = Fest(X)
x11()
par(mfrow=c(2,2))
plot(FFF$theo,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
FFF2 = Fest(X)
x11()
par(mfrow=c(2,2))
plot(FFF2$theo,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
FFF2 = Fest(X)
x11()
par(mfrow=c(2,2))
plot(FFF2$r,FFF2$theo,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
#
# Clean memory
#
rm(list=ls())
#
# Load necessary libraries
#
library(spatstat)
#
# Set working directory
#
setwd("/home/clement/Documents/Stage2A/codeFGJK")
#
# Source program functions
#
source("./R/pointPatternAnalysisTools.R")
#
# Récupération des valeurs des fonctions
#
sufficient.stat=read.table("./RESULTS/F.txt",header=F)
f=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/G.txt",header=F)
g=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/J.txt",header=F)
j=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/K.txt",header=F)
k=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/rayonsK.txt",header=F)
rK=sufficient.stat[,1]
sufficient.stat=read.table("./RESULTS/rayonsFGJ.txt",header=F)
rFGJ=sufficient.stat[,1]
#sr=sufficient.stat[,2]
#
# Estimation de l'intensité
#
sufficient.stat=read.table("./RESULTS/autre.txt",header=F)
n=as.numeric(as.character(sufficient.stat[1,1]))
W=as.numeric(as.character(sufficient.stat[2,1]))
lambda = n/W
Fpois = 1-exp(-lambda*pi*rFGJ*rFGJ)
Jpois = rep(1,length(rFGJ))
Kpois = pi*rK*rK
#
# Affichage des fonctions
#
x11()
par(mfrow=c(2,2))
# F
yMin = min(f[1],Fpois[1])
yMax = max(f[length(f)],Fpois[length(f)])
plot(rFGJ, Fpois, type="l", col="blue", xlab="r", ylab="F(r)", ylim=c(yMin,yMax))
lines(rFGJ, Fpois, lty=2, col=2)
title(main="Fonction F")
legend(0, 0.98*yMax, legend=c("F calcul", "F poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# G
yMin = min(g[1],Fpois[1])
yMax = max(g[length(g)],Fpois[length(g)])
plot(rFGJ, g, type="l", col="blue", xlab="r", ylab="G(r)", ylim=c(yMin,yMax))
lines(rFGJ, Fpois, lty=2, col=2)
title(main="Fonction G")
legend(0, 0.98*yMax, legend=c("G calcul", "G poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# J
yMin = min(j,Jpois)
yMax = max(j,Jpois)
plot(rFGJ, j, type="l", col="blue", xlab="r", ylab="J(r)", ylim=c(yMin,yMax))
lines(rFGJ,Jpois,lty=2,col=2)
title(main="Fonction J")
legend(0, 0.98*yMax, legend=c("J calcul", "J poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
# K
yMin = min(k[1],Kpois[1])
yMax = max(k[length(k)],Kpois[length(k)])
plot(rK, k, type="l", col="blue", xlab="r", ylab="K(r)", ylim=c(yMin,yMax))
lines(rK,Kpois,lty=2,col=2)
title(main="Fonction K")
legend(0, 0.98*yMax, legend=c("K calcul", "K poisson"), col=c("blue", "red"), lty=1:2, cex=0.8)
#
# Read the pattern : Strauss simulation
#
#name.file="./POINTS/Y_strauss_cftp_B.txt"
name.file = as.character(sufficient.stat[3,1])
X=read.point.pattern(name.file)
#
# Analyse exploratoire de X avec spatstat
#
FFF = Fest(X,r=rFGJ)
GGG = Gest(X,r=rFGJ)
JJJ = Jest(X,r=rFGJ)
KKK = Kest(X,r=rK)
x11()
par(mfrow=c(2,2))
plot(rFGJ,FFF$rs,main="F",type="l",col="blue",xlab="r", ylab="F(r)")
lines(rFGJ, f, lty=2, col=2)
legend(0, 0.98*f[length(f)], legend=c("F spatstat","F calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,GGG$rs,main="G",type="l",col="blue",xlab="r", ylab="G(r)")
lines(rFGJ, g, lty=2, col=2)
legend(0, 0.98*g[length(g)], legend=c("G spatstat","G calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rFGJ,JJJ$rs,main="J",type="l",col="blue",xlab="r", ylab="J(r)")
lines(rFGJ, j, lty=2, col=2)
legend(0, 0.98*JJJ$rs[length(j)], legend=c("J spatstat","J calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
plot(rK,KKK$border,main="K",type="l",col="blue",xlab="r", ylab="K(r)")
lines(rK, k, lty=2, col=2)
legend(0, 0.98*k[length(k)], legend=c("K spatstat","K calcul"), col=c("blue", "red"), lty=1:2, cex=0.8)
title(main="Spatstat",outer=TRUE,line=-1.5)
k2k = k-KKK$border
k2k
g2g = g-GGG$rs
g2g
f2f = f-FFF$rs
f2f
